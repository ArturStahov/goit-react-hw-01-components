{"version":3,"sources":["components/Profile/StyledComponents.js","components/Profile/Profile.js","components/Statistics/StyledComponents.js","service/generateRandomColor.js","components/Statistics/Statistics.js","components/FriendList/StyledComponents.js","components/FriendList/FriendList.js","components/TransactionHistory/StyledComponents.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["UserCard","styled","div","Description","Avatar","img","Title","p","DescText","StatBlock","ul","StatItem","li","StatLabel","span","StatQuantity","Profile","name","tag","location","avatar","stats","followers","views","likes","src","alt","defaultProps","StatisticsCard","section","h2","props","width","generateRandomColor","randomColor","map","elem","min","max","Math","ceil","floor","random","Statistics","title","widthStatsItem","length","item","style","backgroundColor","generateColor","label","percentage","id","FriendListBlock","FriendsItem","IsActiveIndicator","isOnl","FriendsAvatar","FriendsName","FriendList","friends","isOnline","TableSection","Table","table","Th","th","Td","td","Tr","tr","TransactionHistory","items","type","amount","currency","App","User","Stats","Friends","Transactions","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.7f6e45d9.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst UserCard = styled.div`\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  background-color: #fff;\r\n  border: 2px solid grey;\r\n  border-radius: 0.5rem;\r\n  box-shadow: 10px 5px 5px grey;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst Description = styled.div`\r\n  padding: 50px 0px 50px 0px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  text-align:center;\r\n`;\r\n\r\nconst Avatar = styled.img`\r\n  width: 250px;\r\n  height: 250px;\r\n  border-radius: 50%;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Title = styled.p`\r\n  width: 100%;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  color: #000000;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst DescText = styled.p`\r\nwidth: 100%;\r\n  font-size: 0.8rem;\r\n  font-weight: 400;\r\n  color: #000000;\r\n  &:not(:last-child){\r\n      margin-bottom: 10px;;\r\n  }\r\n`;\r\n\r\nconst StatBlock = styled.ul`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  background-color:goldenrod;\r\n`;\r\n\r\nconst StatItem = styled.li`\r\n  padding-top: 25px;\r\n  padding-bottom: 25px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  width: 33.33%;\r\n  text-align:center;\r\n  transition-property:background;\r\n  transition-duration:0.3s;\r\n  &:hover{\r\n      background-color:yellowgreen;\r\n  }\r\n  &:not(:last-child){\r\n     border-right: 2px solid grey;\r\n  }\r\n  \r\n`;\r\n\r\nconst StatLabel = styled.span`\r\n  width: 100%;\r\n  font-size: 0.8rem;\r\n  font-weight: 400;\r\n  color: #000000;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst StatQuantity = styled.span`\r\n  width: 100%;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  color: #000000;\r\n`;\r\nexport { UserCard, Description, Avatar, Title, DescText, StatBlock, StatItem, StatLabel, StatQuantity }","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { UserCard, Description, Avatar, Title, DescText, StatBlock, StatItem, StatLabel, StatQuantity } from './StyledComponents'\r\n\r\n\r\n\r\n\r\n\r\nexport default function Profile({\r\n  name,\r\n  tag,\r\n  location,\r\n  avatar,\r\n  stats: { followers, views, likes },\r\n}) {\r\n  return (\r\n    <UserCard>\r\n      <Description>\r\n        <Avatar src={avatar} alt=\"user avatar\" />\r\n        <Title>{name}</Title>\r\n        <DescText>&#64; {tag}</DescText>\r\n        <DescText>{location}</DescText>\r\n      </Description>\r\n\r\n      <StatBlock>\r\n        <StatItem>\r\n          <StatLabel>Followers</StatLabel>\r\n          <StatQuantity>{followers}</StatQuantity>\r\n        </StatItem>\r\n        <StatItem>\r\n          <StatLabel>Views</StatLabel>\r\n          <StatQuantity>{views}</StatQuantity>\r\n        </StatItem>\r\n        <StatItem>\r\n          <StatLabel>Likes</StatLabel>\r\n          <StatQuantity>{likes}</StatQuantity>\r\n        </StatItem>\r\n      </StatBlock>\r\n    </UserCard>\r\n  );\r\n}\r\n\r\nProfile.defaultProps = {\r\n  avatar: 'https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png',\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string,\r\n  stats: PropTypes.objectOf(PropTypes.number),\r\n};\r\n","import styled from 'styled-components';\r\n\r\nconst StatisticsCard = styled.section`\r\n  padding-top:25px;\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  background-color: #fff;\r\n  border: 2px solid grey;\r\n  border-radius: 0.5rem;\r\n  box-shadow: 10px 5px 5px grey;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  text-align:center;\r\n  width: 100%;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  color: #000000;\r\n  margin-bottom: 20px;\r\n`;\r\nconst StatBlock = styled.ul`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nconst StatItem = styled.li`\r\n  width:${props => props.width};\r\n  padding-top: 25px;\r\n  padding-bottom: 25px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  text-align:center;\r\n  transition-property:background;\r\n  transition-duration:0.3s;\r\n \r\n  &:not(:last-child){\r\n     border-right: 2px solid grey;\r\n  }\r\n`;\r\n\r\nconst StatLabel = styled.span`\r\n  width: 100%;\r\n  font-size: 0.8rem;\r\n  font-weight: 400;\r\n  color: #000000;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst StatQuantity = styled.span`\r\n  width: 100%;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  color: #000000;\r\n`;\r\n\r\nexport { StatisticsCard, Title, StatBlock, StatItem, StatLabel, StatQuantity }","\r\nconst generateRandomColor = () => {\r\n    const getRandomIntInclusive = (min, max) => {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    };\r\n    const randomColor = [0, 0, 0].map(elem => {\r\n        elem = getRandomIntInclusive(0, 255);\r\n        return elem;\r\n    });\r\n    return `rgb(${randomColor[0]}, ${randomColor[1]}, ${randomColor[2]})`;\r\n}\r\n\r\nexport default generateRandomColor;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StatisticsCard, Title, StatBlock, StatItem, StatLabel, StatQuantity } from './StyledComponents'\r\nimport generateColor from '../../service/generateRandomColor'\r\n\r\n\r\n\r\nexport default function Statistics({ title, stats }) {\r\n  const widthStatsItem = `${stats.length > 0 && (100 / stats.length)}%`;\r\n\r\n  return (\r\n    <StatisticsCard>\r\n      {title && (<Title>{title}</Title>)}\r\n\r\n      <StatBlock>\r\n        {stats.map(item => (\r\n          <StatItem key={item.id} style={{ backgroundColor: generateColor() }} width={widthStatsItem} >\r\n            <StatLabel>{item.label}</StatLabel>\r\n            <StatQuantity>{item.percentage} &#37;</StatQuantity>\r\n          </StatItem>\r\n        ))}\r\n      </StatBlock>\r\n    </StatisticsCard>\r\n  )\r\n}\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.array.isRequired,\r\n}","import styled from 'styled-components';\r\n\r\nconst FriendListBlock = styled.ul`\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst FriendsItem = styled.li`\r\n  padding: 25px 20px 25px 20px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  border-radius: 0.5rem;\r\n  transition: transform 0.4s ease;\r\n  &:not(:last-child) {\r\n    margin-bottom: 30px;\r\n  }\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n  clip-path: polygon(100% 0%, 100% 100%, 25% 100%, 0% 50%, 25% 0%);\r\n`;\r\n\r\nconst IsActiveIndicator = styled.span`\r\n  width: 30px;\r\n  height: 23px;\r\n  clip-path: polygon(0 51%, 100% 100%, 100% 0);\r\n  background-color: ${props => (props.isOnl ? 'green' : 'red')};\r\n  margin-right: 50px;\r\n`;\r\nconst FriendsAvatar = styled.img`\r\n  width: 70px;\r\n  height: 70px;\r\n  border-radius: 0.5rem;\r\n`;\r\nconst FriendsName = styled.p`\r\n  text-align: center;\r\n  width: 100%;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  color: #000000;\r\n`;\r\n\r\nexport { FriendListBlock, FriendsItem, IsActiveIndicator, FriendsAvatar, FriendsName }","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FriendListBlock, FriendsItem, IsActiveIndicator, FriendsAvatar, FriendsName } from './StyledComponents'\r\nimport generateColor from '../../service/generateRandomColor'\r\n\r\nexport default function FriendList({ friends }) {\r\n  return (\r\n    <FriendListBlock>\r\n      {friends.map(item => (\r\n        <FriendsItem\r\n          key={item.id}\r\n          style={{ backgroundColor: generateColor() }}\r\n        >\r\n          <IsActiveIndicator isOnl={item.isOnline}></IsActiveIndicator>\r\n          <FriendsName>{item.name}</FriendsName>\r\n          <FriendsAvatar src={item.avatar} alt={item.name} width=\"48\" />\r\n        </FriendsItem>\r\n      ))}\r\n    </FriendListBlock>\r\n  );\r\n}\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.array.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nconst TableSection = styled.section`\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  box-shadow: 10px 5px 5px grey;\r\n`;\r\n\r\nconst Table = styled.table`\r\n  text-decoration: none;\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n  text-align: center;\r\n`;\r\n\r\nconst Th = styled.th`\r\n  font-weight: normal;\r\n  font-size: 0.875rem;\r\n  color: #ffffff;\r\n  background-color: #354251;\r\n  white-space: pre-wrap;\r\n  padding: 10px 5px;\r\n  line-height: 13px;\r\n  vertical-align: middle;\r\n  border: 1px solid #354251;\r\n`;\r\n\r\nconst Td = styled.td`\r\n  white-space: pre - wrap;\r\n  padding: 10px 5px;\r\n  line-height: 13px;\r\n  vertical-align: middle;\r\n  border: 1px solid #354251;\r\n`;\r\n\r\nconst Tr = styled.tr`\r\n  &:nth-child(even) {\r\n    background-color: blanchedalmond;\r\n  }\r\n  &:hover{\r\n      background-color: grey;\r\n  }\r\n`;\r\n\r\nexport { TableSection, Table, Th, Td, Tr }","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TableSection, Table, Th, Td, Tr } from './StyledComponents'\r\n\r\n\r\nexport default function TransactionHistory({ items }) {\r\n  return (\r\n    <TableSection>\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <Th>Type</Th>\r\n            <Th>Amount</Th>\r\n            <Th>Currency</Th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {items.map(item => (\r\n            <Tr key={item.id}>\r\n              <Td>{item.type}</Td>\r\n              <Td>{item.amount}</Td>\r\n              <Td>{item.currency}</Td>\r\n            </Tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </TableSection>\r\n  );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Profile from './components/Profile/Profile';\r\nimport User from './data/user.json';\r\nimport Statistics from './components/Statistics/Statistics';\r\nimport Stats from './data/statistical.json';\r\nimport FriendList from './components/FriendList/FriendList'\r\nimport Friends from './data/friends.json'\r\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory'\r\nimport Transactions from './data/transactions.json'\r\n\r\nexport default function App() {\r\n\r\n    return (\r\n        <>\r\n            <Profile\r\n                name={User.name}\r\n                tag={User.tag}\r\n                location={User.location}\r\n                avatar={User.avatar}\r\n                stats={User.stats}\r\n            ></Profile>\r\n            <Statistics\r\n                title=\"Upload stats\"\r\n                stats={Stats}\r\n            ></Statistics>\r\n            <FriendList\r\n                friends={Friends}\r\n            ></FriendList>\r\n            <TransactionHistory\r\n                items={Transactions}\r\n            ></TransactionHistory>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css'\nimport App from './App'\n\n\n\n\nReactDOM.render(<App />, document.querySelector('#root'))\n\n\n\n"],"sourceRoot":""}